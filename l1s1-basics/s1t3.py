'''
Вагоны в электричке пронумерованы натуральными
числами, начиная с 1 (при этом иногда вагоны
нумеруются от «головы» поезда, а иногда – с
«хвоста»; это зависит от того, в какую сторону едет
электричка). В каждом вагоне написан его номер.
Витя сел в i-й вагон от головы поезда и обнаружил,
что его вагон имеет номер j. Он хочет определить,
сколько всего вагонов в электричке. Напишите
программу, которая будет это делать или сообщать,
что без дополнительной информации это сделать
невозможно.
Input: 3 4(ввод на разных строках)
Output: 6
'''

i = int(input('На который вагон сел Витя? i:')) 
j = int(input('Номер вагона (j): '))

'''
При решении задачи возможны 3 случая:
1. Номер вагона(j) и число, что посчитал Витя(i) не совпадают (i!=j==True):
   при таком развитии событий с одной стороны Витя посчитал количество вагонов
   и свой в том числе, а также по номеру вагона уже посчитано количество с другой
   стороны, в том числе и вагон Вити. Так, к примеру, при i=3, j=4 с одной стороны
   от вагона Вити 2 вагона, а с другой 3. В обеих случаях исключили вагон Вити,
   поэтому числа меньше.
   Следовательно, чтобы посчитать вагоны нужно сложить числа i и j, и отнять один вагон,
   который посчитали два раза.

   [1]-[2]-[3]-[4*]-[ ]-[ ] - нумерация вагонов, где *-вагон Вити
   [ ]-[ ]-[ ]-[3*]-[2]-[1] - а так считал Витя, где *-вагон Вити

2. Возникает вопрос: а что если вагоны нумеровали с той же стороны, с которой считал
   Витя? Тогда число Вити и номер вагона будут совпадать (i!=j==False)и не имея представления о другой
   части состава, мы не сможем дать верный ответ.

   [1]-[2]-[3]-[4*]-[ ]-[ ]-[x] - нумерация вагонов, где *-вагон Вити
   [1]-[2]-[3]-[4*]-[ ]-[ ]-[x] - а так считал Витя, где *-вагон Вити

3. Есть ещё один любопытный случай: если количество вагонов нечётное, а Витя сел в "самый
   средний" вагон, то в любой комбинации подсчетов Вити, нумерации поезда, с "головы", с
   "хвоста" i и j будут равны. Но опять же, так как в условии не прописано как считал Витя,
   или сел ли он в средний вагон, ответ будет как при втором случаи.
   
   [1]-[2]-[3*]-[ ]-[ ] - нумерация вагонов, где *-вагон Вити
   [ ]-[ ]-[3*]-[2]-[1] - а так считал Витя, где *-вагон Вити
'''

if i!=j:
    print(i+j-1)
else:
    print('Не хватает данных для решения задачи.')
